{
  "openapi": "3.0.3",
  "info": {
    "title": "API desarrollada para testear la integracion NodeJs - Swagger",
    "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n_If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://localhost:3001"
    }
  ],
  "tags": [
    {
      "name": "Productos",
      "description": "Todos los endpoint de productos"
    },
    {
      "name": "Usuarios",
      "description": "Todos los endpoint de productos"
    }
  ],
  "paths": {
    "/api/productos": {
      "get": {
        "tags": ["Productos"],
        "summary": "Devuelve todos los productos en la DB",
        "description": "Multiple status values can be provided with comma separated strings",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Productos"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Productos"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/api/clientes":{
      "get":{
        "tags":["Clientes"],
        "summary":"Devuelve todos los clientes de la DB",
        "description": "Multiple status values can be provided with comma separated strings",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Clientes"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Clientes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post":{
        "tags":["Clientes"],
        "summary":"Inserta nuevos clientes de la DB",
        "description": "",
        "requestBody": {
          "description": "Crea un nuevo cliente en la DB",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Clientes"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Clientes"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Clientes"
              }
            }
          },
          "required": true
        }
      }
    }
  },

  "components": {
    "schemas": {
      "Usuario": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "10"
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "nombre": {
            "type": "string",
            "example": "John"
          },
          "apellido": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "re12345"
          }
        },
        "xml": {
          "name": "Usuario"
        }
      },
      "Clientes": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "10"
          },
          "cliente": {
            "type": "string",
            "example": "theUser"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          }
        },
        "xml": {
          "name": "Cliente"
        }
      },
      "Productos": {
        "required": [],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "10"
          },
          "producto": {
            "type": "string",
            "example": "Picador"
          },
          "precio": {
            "type": "integer",
            "example": "15"
          },
          "stock": {
            "type": "integer",
            "example": "420"
          }
        },
        "xml": {
          "name": "Productos"
        }
      }
    },

    "requestBodies": {
      "Producto": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Productos"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Productos"
            }
          }
        }
      },
      "Cliente": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Clientes"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Clientes"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    }
  }
}
